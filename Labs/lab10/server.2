Script started on Fri Nov 24 21:38:04 2023
[0m[38;5;240m[49m[39m[27m[24m[K

[2A7[0m[49m[39m[38;5;240m‚ï≠‚îÄ[0m[38;5;240m[49m[37mÓÇ∂[0m[37m[47m[38;5;232m ÔÖπ[0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37mÓÇ∞[0m[37m[44m[44m[38;5;254m ÔÅº  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/[38;5;250mL[0m[38;5;250m[44m[44m[38;5;254m/[38;5;250mCl[0m[38;5;250m[44m[44m[38;5;254m/[38;5;250mOneDrive-U[0m[38;5;250m[44m[44m[38;5;254m/[38;5;250mU[0m[38;5;250m[44m[44m[38;5;254m/2023-2024/CSC209/[1m[38;5;254m[44m[38;5;255mmenese23[0m[38;5;255m[44m[44m[38;5;254m/[1m[38;5;254m[44m[38;5;255mlab10[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[49m[34mÓÇº [0m[34m[49m[39m[38;5;240m¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑[0m[38;5;240m[49m[30mÓÇ∫ [0m[30m[40m[32m [0m[32m[40m[40m[32m‚úî[0m[32m[40m[40m[32m [0m[32m[40m[40m[32m[37mÓÇ≤[0m[37m[40m[47m[30m 21:38:04[0m[30m[47m[47m[30m ÔÄó [0m[30m[47m[47m[30m [49m[37mÓÇ¥[0m[37m[47m[30m[0m[30m[47m[49m[39m[38;5;240m‚îÄ‚ïÆ
[0m[38;5;240m[49m[39m[38;5;240m‚ï∞‚îÄ[0m[38;5;240m[49m[39m[0m[49m[39m [0m[49m[39m                                                                                           [0m[38;5;240m[49m[39m[38;5;240m‚îÄ‚ïØ[0m[38;5;240m[49m[39m[27m[24m[3C[?2004h[?25l8[0m[49m[39m[27m[24m[J]2;frederickmeneses@Fredericks-MacBook-Air:~/Library/CloudStorage/OneDrive-UniversityofToronto/University of Toronto/2023-2024/CSC209/menese23/lab10]1;..enese23/lab10]7;file://Fredericks-MacBook-Air.local/Users/frederickmeneses/Library/CloudStorage/OneDrive-UniversityofToronto/University%20of%20Toronto/2023-2024/CSC209/menese23/lab10\[0m[38;5;254m[49m[39m[27m[24m[1m[7m%[27m[1m[0m                                                                                                [0m[49m[39m[27m[24m[K[0m[27m[24m[J[0m[38;5;240m[49m[39m
[A[38;5;240m‚ï≠‚îÄ[0m[38;5;240m[49m[37mÓÇ∂[0m[37m[47m[38;5;232m ÔÖπ[0m[38;5;232m[47m[47m[38;5;232m [0m[38;5;232m[47m[44m[37mÓÇ∞[0m[37m[44m[44m[38;5;254m ÔÅº  [1m[38;5;254m[44m[38;5;255m~[0m[38;5;255m[44m[44m[38;5;254m/[38;5;250mL[0m[38;5;250m[44m[44m[38;5;254m/[38;5;250mCl[0m[38;5;250m[44m[44m[38;5;254m/[38;5;250mOneDrive-U[0m[38;5;250m[44m[44m[38;5;254m/[38;5;250mU[0m[38;5;250m[44m[44m[38;5;254m/[38;5;250m2023[0m[38;5;250m[44m[44m[38;5;254m/[38;5;250mCSC20[0m[38;5;250m[44m[44m[38;5;254m/[1m[38;5;254m[44m[38;5;255mmenese23[0m[38;5;255m[44m[44m[38;5;254m/[1m[38;5;254m[44m[38;5;255mlab10[0m[38;5;255m[44m[44m[38;5;254m[0m[38;5;254m[44m[44m[38;5;254m [0m[38;5;254m[44m[43m[34mÓÇ∞[0m[34m[43m[43m[30m Ôáì  [30mÔÑ¶ master [30m!3 [30m?31[0m[30m[43m[43m[30m [0m[30m[43m[49m[33mÓÇº [0m[33m[49m[39m[38;5;240m
[0m[38;5;240m[49m[39m[38;5;240m‚ï∞‚îÄ[0m[38;5;240m[49m[39m[0m[49m[39m [0m[49m[39m[K[91C[0m[49m[39m[38;5;240m‚îÄ‚ïØ[39m[93D[?1h=[?25h[?2004h[1m[31ms[0m[39m[1m[31ms[0m[39m[90mcript server.2[39m[14D[1m[31ms[1m[31mc[0m[39m[1m[31ms[1m[31mc[1m[31mr[0m[39m[1m[31mr[1m[31mi[0m[39m[1m[31mi[1m[31mp[0m[39m[0m[32ms[0m[32mc[0m[32mr[0m[32mi[0m[32mp[32mt[39m[1m[31ms[1m[31mc[1m[31mr[1m[31mi[1m[31mp[0m[39m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [10D[90mt server.2[39m[10D[1m[31mi[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [11D[90mpt server.2[39m[11D[1m[31mr[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [12D[90mipt server.2[39m[12D[1m[31ms[1m[31mc[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [13D[90mript server.2[39m[13D[1m[31ms[0m[39m[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [14D[1m[31ms[0m[39m[90mcript server.2[39m[14D[0m[39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [39m [15D[1m[31m;[0m[39m[1m[31m;[0m[39m[90ms[39m[1m[31m;[1m[31m;[0m[39m[1m[31m;[0m[39m[0m[39m [1m[31m;[0m[39m[90ms[39m[0m[39m [39m [32ml[39m[32ml[39m[90mldb ./bufserver[39m[15D[32ml[32ml[39m[32ml[32ml[32md[32mb[39m[39m [39m[4m.[39m[4m/[39m[4mb[39m[4mu[39m[4mf[39m[4ms[39m[4me[39m[4mr[39m[4mv[39m[4me[39m[4mr[24m[?1l>[?25l[?2004l[A[0m[27m[24m[J[0m[49m[27m[24m[38;5;76m‚ùØ[0m[38;5;76m[49m[39m[27m[24m [32mlldb[39m [4m./bufserver[24m[K[?25h
]2;lldb ./bufserver]1;lldb(lldb) target create "./bufserver"
[2mLocating external symbol file for bufserver...[0m[K[2K[2mParsing symbol table for bufserver...[0m[K[2K[2mLocating external symbol file for dyld...[0m[K[2K[2mParsing symbol table for dyld...[0m[K[2K[2mLocating external symbol file for libSystem.B.dylib...[0m[K[2K[2mParsing symbol table for libSystem.B.dylib...[0m[K[2K[2mLocating external symbol file for libcache.dylib...[0m[K[2K[2mParsing symbol table for libcache.dylib...[0m[K[2K[2mLocating external symbol file for libcommonCrypto.dylib...[0m[K[2K[2mParsing symbol table for libcommonCrypto.dylib...[0m[K[2K[2mLocating external symbol file for libcompiler_rt.dylib...[0m[K[2K[2mParsing symbol table for libcompiler_rt.dylib...[0m[K[2K[2mLocating external symbol file for libcopyfile.dylib...[0m[K[2K[2mParsing symbol table for libcopyfile.dylib...[0m[K[2K[2mLocating external symbol file for libcorecrypto.dylib...[0m[K[2K[2mParsing symbol table for libcorecrypto.dylib...[0m[K[2K[2mLocating external symbol file for libdispatch.dylib...[0m[K[2K[2mParsing symbol table for libdispatch.dylib...[0m[K[2K[2mLocating external symbol file for libdyld.dylib...[0m[K[2K[2mParsing symbol table for libdyld.dylib...[0m[K[2K[2mLocating external symbol file for libkeymgr.dylib...[0m[K[2K[2mParsing symbol table for libkeymgr.dylib...[0m[K[2K[2mLocating external symbol file for libmacho.dylib...[0m[K[2K[2mParsing symbol table for libmacho.dylib...[0m[K[2K[2mLocating external symbol file for libquarantine.dylib...[0m[K[2K[2mParsing symbol table for libquarantine.dylib...[0m[K[2K[2mLocating external symbol file for libremovefile.dylib...[0m[K[2K[2mParsing symbol table for libremovefile.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_asl.dylib...[0m[K[2K[2mParsing symbol table for libsystem_asl.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_blocks.dylib...[0m[K[2K[2mParsing symbol table for libsystem_blocks.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_c.dylib...[0m[K[2K[2mParsing symbol table for libsystem_c.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_collections.dylib...[0m[K[2K[2mParsing symbol table for libsystem_collections.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_configuration.dylib...[0m[K[2K[2mParsing symbol table for libsystem_configuration.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_containermanager.dylib...[0m[K[2K[2mParsing symbol table for libsystem_containermanager.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_coreservices.dylib...[0m[K[2K[2mParsing symbol table for libsystem_coreservices.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_darwin.dylib...[0m[K[2K[2mParsing symbol table for libsystem_darwin.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_dnssd.dylib...[0m[K[2K[2mParsing symbol table for libsystem_dnssd.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_featureflags.dylib...[0m[K[2K[2mParsing symbol table for libsystem_featureflags.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_info.dylib...[0m[K[2K[2mParsing symbol table for libsystem_info.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_m.dylib...[0m[K[2K[2mParsing symbol table for libsystem_m.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_malloc.dylib...[0m[K[2K[2mParsing symbol table for libsystem_malloc.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_networkextension.dylib...[0m[K[2K[2mParsing symbol table for libsystem_networkextension.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_notify.dylib...[0m[K[2K[2mParsing symbol table for libsystem_notify.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_sandbox.dylib...[0m[K[2K[2mParsing symbol table for libsystem_sandbox.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_secinit.dylib...[0m[K[2K[2mParsing symbol table for libsystem_secinit.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_kernel.dylib...[0m[K[2K[2mParsing symbol table for libsystem_kernel.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_platform.dylib...[0m[K[2K[2mParsing symbol table for libsystem_platform.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_pthread.dylib...[0m[K[2K[2mParsing symbol table for libsystem_pthread.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_symptoms.dylib...[0m[K[2K[2mParsing symbol table for libsystem_symptoms.dylib...[0m[K[2K[2mLocating external symbol file for libsystem_trace.dylib...[0m[K[2K[2mParsing symbol table for libsystem_trace.dylib...[0m[K[2K[2mLocating external symbol file for libunwind.dylib...[0m[K[2K[2mParsing symbol table for libunwind.dylib...[0m[K[2K[2mLocating external symbol file for libxpc.dylib...[0m[K[2K[2mParsing symbol table for libxpc.dylib...[0m[K[2K[2mLocating external symbol file for libobjc.A.dylib...[0m[K[2K[2mParsing symbol table for libobjc.A.dylib...[0m[K[2K[2mLocating external symbol file for libc++abi.dylib...[0m[K[2K[2mParsing symbol table for libc++abi.dylib...[0m[K[2K[2mLocating external symbol file for liboah.dylib...[0m[K[2K[2mParsing symbol table for liboah.dylib...[0m[K[2K[2mLocating external symbol file for libc++.1.dylib...[0m[K[2K[2mParsing symbol table for libc++.1.dylib...[0m[K[2KCurrent executable set to '/Users/frederickmeneses/Library/CloudStorage/OneDrive-UniversityofToronto/University of Toronto/2023-2024/CSC209/menese23/lab10/bufserver' (arm64).
(lldb) [1G[2m(lldb) [0m[8Gbreak set -n main
[2mLocating external symbol file for bufserver.o...[0m[K[2K[2mLoading Apple DWARF index for bufserver.o...[0m[K[2K[2mParsing symbol table for bufserver.o...[0m[K[2K[2mLocating external symbol file for socket.o...[0m[K[2K[2mLoading Apple DWARF index for socket.o...[0m[K[2KBreakpoint 1: where = bufserver`main + 24 at bufserver.c:21:12, address = 0x00000001000037d8
(lldb) [1G[2m(lldb) [0m[8Grun
Process 32935 launched: '/Users/frederickmeneses/Library/CloudStorage/OneDrive-UniversityofToronto/University of Toronto/2023-2024/CSC209/menese23/lab10/bufserver' (arm64)
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x00000001000037d8[0m bufserver`main at [36mbufserver.c[0m:[33m21[0m:[33m12[0m
[33m  [0m 18  	[32mint[0m main() {
[33m  [0m 19  	    [35m// This line causes stdout not to be buffered.[0m
[33m  [0m 20  	    [35m// Don't change this! Necessary for autotesting.[0m
[33m->[0m 21  	    setbuf([4mstdout[0m, NULL);
[33m  [0m 22  	
[33m  [0m 23  	    [32mstruct[0m sockaddr_in *self = init_server_addr(PORT);
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gstep
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep in[0m
    frame #0: [33m0x00000001000037e8[0m bufserver`main at [36mbufserver.c[0m:[33m23[0m:[33m32[0m
[33m  [0m 20  	    [35m// Don't change this! Necessary for autotesting.[0m
[33m  [0m 21  	    setbuf(stdout, NULL);
[33m  [0m 22  	
[33m->[0m 23  	    [32mstruct[0m sockaddr_in *self = [4minit_server_addr[0m(PORT);
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gnext
[2mParsing symbol table for socket.o...[0m[K[2KProcess 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000037f0[0m bufserver`main at [36mbufserver.c[0m:[33m24[0m:[33m41[0m
[33m  [0m 21  	    setbuf(stdout, NULL);
[33m  [0m 22  	
[33m  [0m 23  	    [32mstruct[0m sockaddr_in *self = init_server_addr(PORT);
[33m->[0m 24  	    [32mint[0m listenfd = set_up_server_socket([4mself[0m, [31m5[0m);
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
[33m  [0m 27  	        [32mint[0m fd = accept_connection(listenfd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003800[0m bufserver`main at [36mbufserver.c[0m:[33m26[0m:[33m5[0m
[33m  [0m 23  	    [32mstruct[0m sockaddr_in *self = init_server_addr(PORT);
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
[33m  [0m 25  	
[33m->[0m 26  	    [32m[4mwhile[0m[0m ([31m1[0m) {
[33m  [0m 27  	        [32mint[0m fd = accept_connection(listenfd);
[33m  [0m 28  	        [32mif[0m (fd < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003804[0m bufserver`main at [36mbufserver.c[0m:[33m27[0m:[33m36[0m
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
[33m->[0m 27  	        [32mint[0m fd = accept_connection([4mlistenfd[0m);
[33m  [0m 28  	        [32mif[0m (fd < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
[33m  [0m 30  	        }
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Waiting for a new connection...
New connection accepted from 127.0.0.1:50123
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003810[0m bufserver`main at [36mbufserver.c[0m:[33m28[0m:[33m13[0m
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
[33m  [0m 27  	        [32mint[0m fd = accept_connection(listenfd);
[33m->[0m 28  	        [32mif[0m ([4mfd[0m < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
[33m  [0m 30  	        }
[33m  [0m 31  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003828[0m bufserver`main at [36mbufserver.c[0m:[33m33[0m:[33m14[0m
[33m  [0m 30  	        }
[33m  [0m 31  	
[33m  [0m 32  	        [35m// Receive messages[0m
[33m->[0m 33  	        [32mchar[0m [4mbuf[0m[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003838[0m bufserver`main at [36mbufserver.c[0m:[33m34[0m:[33m13[0m
[33m  [0m 31  	
[33m  [0m 32  	        [35m// Receive messages[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m->[0m 34  	        [32mint[0m [4minbuf[0m = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003840[0m bufserver`main at [36mbufserver.c[0m:[33m35[0m:[33m13[0m
[33m  [0m 32  	        [35m// Receive messages[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m->[0m 35  	        [32mint[0m [4mroom[0m = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003844[0m bufserver`main at [36mbufserver.c[0m:[33m36[0m:[33m15[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m->[0m 36  	        [32mchar[0m *[4mafter[0m = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003848[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 32935 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $0 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gprint inbuf
(int) $1 = 30
(lldb) [1G[2m(lldb) [0m[8Gq[K[1G[2m(lldb) [0m[8Gkill
Process 32935 exited with status = 9 (0x00000009) 
(lldb) [1G[2m(lldb) [0m[8Gbrea[K[1G[2m(lldb) [0m[11G[K[1G[2m(lldb) [0m[10G[K[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Grun
Process 33268 launched: '/Users/frederickmeneses/Library/CloudStorage/OneDrive-UniversityofToronto/University of Toronto/2023-2024/CSC209/menese23/lab10/bufserver' (arm64)
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mbreakpoint 1.1[0m
    frame #0: [33m0x00000001000037d8[0m bufserver`main at [36mbufserver.c[0m:[33m21[0m:[33m12[0m
[33m  [0m 18  	[32mint[0m main() {
[33m  [0m 19  	    [35m// This line causes stdout not to be buffered.[0m
[33m  [0m 20  	    [35m// Don't change this! Necessary for autotesting.[0m
[33m->[0m 21  	    setbuf([4mstdout[0m, NULL);
[33m  [0m 22  	
[33m  [0m 23  	    [32mstruct[0m sockaddr_in *self = init_server_addr(PORT);
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000037e8[0m bufserver`main at [36mbufserver.c[0m:[33m23[0m:[33m32[0m
[33m  [0m 20  	    [35m// Don't change this! Necessary for autotesting.[0m
[33m  [0m 21  	    setbuf(stdout, NULL);
[33m  [0m 22  	
[33m->[0m 23  	    [32mstruct[0m sockaddr_in *self = [4minit_server_addr[0m(PORT);
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000037f0[0m bufserver`main at [36mbufserver.c[0m:[33m24[0m:[33m41[0m
[33m  [0m 21  	    setbuf(stdout, NULL);
[33m  [0m 22  	
[33m  [0m 23  	    [32mstruct[0m sockaddr_in *self = init_server_addr(PORT);
[33m->[0m 24  	    [32mint[0m listenfd = set_up_server_socket([4mself[0m, [31m5[0m);
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
[33m  [0m 27  	        [32mint[0m fd = accept_connection(listenfd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003800[0m bufserver`main at [36mbufserver.c[0m:[33m26[0m:[33m5[0m
[33m  [0m 23  	    [32mstruct[0m sockaddr_in *self = init_server_addr(PORT);
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
[33m  [0m 25  	
[33m->[0m 26  	    [32m[4mwhile[0m[0m ([31m1[0m) {
[33m  [0m 27  	        [32mint[0m fd = accept_connection(listenfd);
[33m  [0m 28  	        [32mif[0m (fd < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003804[0m bufserver`main at [36mbufserver.c[0m:[33m27[0m:[33m36[0m
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
[33m->[0m 27  	        [32mint[0m fd = accept_connection([4mlistenfd[0m);
[33m  [0m 28  	        [32mif[0m (fd < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
[33m  [0m 30  	        }
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Waiting for a new connection...
New connection accepted from 127.0.0.1:50148
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003810[0m bufserver`main at [36mbufserver.c[0m:[33m28[0m:[33m13[0m
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
[33m  [0m 27  	        [32mint[0m fd = accept_connection(listenfd);
[33m->[0m 28  	        [32mif[0m ([4mfd[0m < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
[33m  [0m 30  	        }
[33m  [0m 31  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $2 = "\0\xc1\0\0\U00000001\0\0\0\0\xc1\0\0\U00000001\0\0\0\0\U00000001\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003828[0m bufserver`main at [36mbufserver.c[0m:[33m33[0m:[33m14[0m
[33m  [0m 30  	        }
[33m  [0m 31  	
[33m  [0m 32  	        [35m// Receive messages[0m
[33m->[0m 33  	        [32mchar[0m [4mbuf[0m[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003838[0m bufserver`main at [36mbufserver.c[0m:[33m34[0m:[33m13[0m
[33m  [0m 31  	
[33m  [0m 32  	        [35m// Receive messages[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m->[0m 34  	        [32mint[0m [4minbuf[0m = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $3 = "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003840[0m bufserver`main at [36mbufserver.c[0m:[33m35[0m:[33m13[0m
[33m  [0m 32  	        [35m// Receive messages[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m->[0m 35  	        [32mint[0m [4mroom[0m = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003844[0m bufserver`main at [36mbufserver.c[0m:[33m36[0m:[33m15[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m->[0m 36  	        [32mchar[0m *[4mafter[0m = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003848[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint p[K[1G[2m(lldb) [0m[14Gbuf
(char[30]) $4 = "A sti\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $5 = "A sti\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $6 = "A sti\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint nbytes
(int) $7 = 7
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $8 = "A stitch in time\r\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $9 = "A stitch in time\r\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Next message: A stitch in time
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038d4[0m bufserver`main at [36mbufserver.c[0m:[33m71[0m:[33m26[0m
[33m  [0m 68  	                [35m// You want to move the stuff after the full line to the beginning[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m->[0m 71  	                inbuf -= [4mwhere[0m;
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038e4[0m bufserver`main at [36mbufserver.c[0m:[33m72[0m:[33m17[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m  [0m 71  	                inbuf -= where;
[33m->[0m 72  	                [4mmemmove[0m(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038fc[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $10 = "A stitch in time\0\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $11 = "A stitch in time\0\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
n
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $12 = "A stitch in time\0\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gprint inbuf
(int) $13 = 9
(lldb) [1G[2m(lldb) [0m[8G
(int) $14 = 9
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G

Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G

Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $15 = "A stitch in time\r\nA s\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprin t[K[1G[2m(lldb) [0m[13G[1G[2m(lldb) [0m[12Gt buf
(char[30]) $16 = "A stitch in time\r\nA s\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $17 = "A stitch in time\r\nA s\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Gprint buf[1G[2m(lldb) [0m[17G
(char[30]) $18 = "A stitch in time\0\nA s\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $19 = "A stitch in time\0\nA s\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Next message: A stitch in time
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038d4[0m bufserver`main at [36mbufserver.c[0m:[33m71[0m:[33m26[0m
[33m  [0m 68  	                [35m// You want to move the stuff after the full line to the beginning[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m->[0m 71  	                inbuf -= [4mwhere[0m;
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038e4[0m bufserver`main at [36mbufserver.c[0m:[33m72[0m:[33m17[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m  [0m 71  	                inbuf -= where;
[33m->[0m 72  	                [4mmemmove[0m(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038fc[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Next message: A stitch in time
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038d4[0m bufserver`main at [36mbufserver.c[0m:[33m71[0m:[33m26[0m
[33m  [0m 68  	                [35m// You want to move the stuff after the full line to the beginning[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m->[0m 71  	                inbuf -= [4mwhere[0m;
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038e4[0m bufserver`main at [36mbufserver.c[0m:[33m72[0m:[33m17[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m  [0m 71  	                inbuf -= where;
[33m->[0m 72  	                [4mmemmove[0m(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038fc[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Next message: A stitch in time
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038d4[0m bufserver`main at [36mbufserver.c[0m:[33m71[0m:[33m26[0m
[33m  [0m 68  	                [35m// You want to move the stuff after the full line to the beginning[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m->[0m 71  	                inbuf -= [4mwhere[0m;
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038e4[0m bufserver`main at [36mbufserver.c[0m:[33m72[0m:[33m17[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m  [0m 71  	                inbuf -= where;
[33m->[0m 72  	                [4mmemmove[0m(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038fc[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $20 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G


Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $21 = "A stitch in time\r\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $22 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Next message: A stitch in time
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038d4[0m bufserver`main at [36mbufserver.c[0m:[33m71[0m:[33m26[0m
[33m  [0m 68  	                [35m// You want to move the stuff after the full line to the beginning[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m->[0m 71  	                inbuf -= [4mwhere[0m;
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038e4[0m bufserver`main at [36mbufserver.c[0m:[33m72[0m:[33m17[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m  [0m 71  	                inbuf -= where;
[33m->[0m 72  	                [4mmemmove[0m(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $23 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $24 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038fc[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn[1G[2m(lldb) [0m[9G[K[1G[2m(lldb) [0m[8Gprint buf[1G[2m(lldb) [0m[17G
(char[30]) $25 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $26 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $27 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $28 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003924[0m bufserver`main at [36mbufserver.c[0m:[33m78[0m:[33m15[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m->[0m 78  	        close([4mfd[0m);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
[33m  [0m 80  	    }
[33m  [0m 81  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $29 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003934[0m bufserver`main at [36mbufserver.c[0m:[33m79[0m:[33m9[0m
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m->[0m 79  	        [4mprintf[0m("The connection is now closed ...\n");
[33m  [0m 80  	    }
[33m  [0m 81  	
[33m  [0m 82  	    free(self);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
The connection is now closed ...
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003938[0m bufserver`main at [36mbufserver.c[0m:[33m26[0m:[33m5[0m
[33m  [0m 23  	    [32mstruct[0m sockaddr_in *self = init_server_addr(PORT);
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
[33m  [0m 25  	
[33m->[0m 26  	    [32m[4mwhile[0m[0m ([31m1[0m) {
[33m  [0m 27  	        [32mint[0m fd = accept_connection(listenfd);
[33m  [0m 28  	        [32mif[0m (fd < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003804[0m bufserver`main at [36mbufserver.c[0m:[33m27[0m:[33m36[0m
[33m  [0m 24  	    [32mint[0m listenfd = set_up_server_socket(self, [31m5[0m);
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
[33m->[0m 27  	        [32mint[0m fd = accept_connection([4mlistenfd[0m);
[33m  [0m 28  	        [32mif[0m (fd < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
[33m  [0m 30  	        }
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Waiting for a new connection...
q
New connection accepted from 127.0.0.1:50380
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003810[0m bufserver`main at [36mbufserver.c[0m:[33m28[0m:[33m13[0m
[33m  [0m 25  	
[33m  [0m 26  	    [32mwhile[0m ([31m1[0m) {
[33m  [0m 27  	        [32mint[0m fd = accept_connection(listenfd);
[33m->[0m 28  	        [32mif[0m ([4mfd[0m < [31m0[0m) {
[33m  [0m 29  	            [32mcontinue[0m;
[33m  [0m 30  	        }
[33m  [0m 31  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003828[0m bufserver`main at [36mbufserver.c[0m:[33m33[0m:[33m14[0m
[33m  [0m 30  	        }
[33m  [0m 31  	
[33m  [0m 32  	        [35m// Receive messages[0m
[33m->[0m 33  	        [32mchar[0m [4mbuf[0m[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003838[0m bufserver`main at [36mbufserver.c[0m:[33m34[0m:[33m13[0m
[33m  [0m 31  	
[33m  [0m 32  	        [35m// Receive messages[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m->[0m 34  	        [32mint[0m [4minbuf[0m = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003840[0m bufserver`main at [36mbufserver.c[0m:[33m35[0m:[33m13[0m
[33m  [0m 32  	        [35m// Receive messages[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m->[0m 35  	        [32mint[0m [4mroom[0m = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003844[0m bufserver`main at [36mbufserver.c[0m:[33m36[0m:[33m15[0m
[33m  [0m 33  	        [32mchar[0m buf[BUFSIZE] = {[31m'\0'[0m};
[33m  [0m 34  	        [32mint[0m inbuf = [31m0[0m;           [35m// How many bytes currently in buffer?[0m
[33m  [0m 35  	        [32mint[0m room = [32msizeof[0m(buf);  [35m// How many bytes remaining in buffer?[0m
[33m->[0m 36  	        [32mchar[0m *[4mafter[0m = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003848[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $30 = "A sti\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $31 = "A sti\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $32 = "A stitch in \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $33 = "A stitch in time\r\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $34 = "A stitch in time\r\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Next message: A stitch in time
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038d4[0m bufserver`main at [36mbufserver.c[0m:[33m71[0m:[33m26[0m
[33m  [0m 68  	                [35m// You want to move the stuff after the full line to the beginning[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m->[0m 71  	                inbuf -= [4mwhere[0m;
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038e4[0m bufserver`main at [36mbufserver.c[0m:[33m72[0m:[33m17[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m  [0m 71  	                inbuf -= where;
[33m->[0m 72  	                [4mmemmove[0m(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $35 = "A stitch in time\0\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gprint where
(int) $36 = 18
(lldb) [1G[2m(lldb) [0m[8Gprint infb[K[1G[2m(lldb) [0m[17G[K[1G[2m(lldb) [0m[16Gbuf
(int) $37 = 0
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038fc[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $38 = "A stitch in time\0\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $39 = "A stitch in time\0\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $40 = "A stitch in time\0\n\0\0\0\0\0\0\0\0\0\0\0"
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Next message: A stitch in time
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038d4[0m bufserver`main at [36mbufserver.c[0m:[33m71[0m:[33m26[0m
[33m  [0m 68  	                [35m// You want to move the stuff after the full line to the beginning[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m->[0m 71  	                inbuf -= [4mwhere[0m;
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $41 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $42 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gprint inbuf
(int) $43 = 30
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038e4[0m bufserver`main at [36mbufserver.c[0m:[33m72[0m:[33m17[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m  [0m 71  	                inbuf -= where;
[33m->[0m 72  	                [4mmemmove[0m(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint inbuf
(int) $44 = 12
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038fc[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $45 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $46 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $47 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038a4[0m bufserver`main at [36mbufserver.c[0m:[33m59[0m:[33m21[0m
[33m  [0m 56  	                [35m// using print statement below.[0m
[33m  [0m 57  	                [35m// Be sure to put a '\0' in the correct place first;[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m->[0m 59  	                buf[[4mwhere[0m - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m  [0m 61  	                printf("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gls
[0;1;31merror: [0m'ls' is not a valid command.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038bc[0m bufserver`main at [36mbufserver.c[0m:[33m61[0m:[33m17[0m
[33m  [0m 58  	                [35m// otherwise you'll get junk in the output.[0m
[33m  [0m 59  	                buf[where - [31m2[0m] = [31m'\0'[0m;
[33m  [0m 60  	
[33m->[0m 61  	                [4mprintf[0m("Next message: %s\n", buf);
[33m  [0m 62  	                [35m// Note that we could have also used write to avoid having to[0m
[33m  [0m 63  	                [35m// put the '\0' in the buffer. Try using write later![0m
[33m  [0m 64  	
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprin[K[1G[2m(lldb) [0m[11G[K[1G[2m(lldb) [0m[10Gn[K[1G[2m(lldb) [0m[10Gint buf
(char[30]) $48 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Next message: A stitch in time
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038d4[0m bufserver`main at [36mbufserver.c[0m:[33m71[0m:[33m26[0m
[33m  [0m 68  	                [35m// You want to move the stuff after the full line to the beginning[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m->[0m 71  	                inbuf -= [4mwhere[0m;
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038e4[0m bufserver`main at [36mbufserver.c[0m:[33m72[0m:[33m17[0m
[33m  [0m 69  	                [35m// of the buffer.  A loop can do it, or you can use memmove.[0m
[33m  [0m 70  	                [35m// memmove(destination, source, number_of_bytes)[0m
[33m  [0m 71  	                inbuf -= where;
[33m->[0m 72  	                [4mmemmove[0m(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $49 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gprint inbuf
(int) $50 = 4
(lldb) [1G[2m(lldb) [0m[8Gprint where
(int) $51 = 18
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x00000001000038fc[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $52 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $53 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $54 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $55 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $56 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $57 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $58 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $59 = "A stitch in time\0\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8Gn
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003900[0m bufserver`main at [36mbufserver.c[0m:[33m75[0m:[33m27[0m
[33m  [0m 72  	                memmove(buf, buf + where, inbuf);
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m->[0m 75  	            after = buf + [4minbuf[0m;
[33m  [0m 76  	            room = [32msizeof[0m(buf) - inbuf;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003910[0m bufserver`main at [36mbufserver.c[0m:[33m76[0m:[33m34[0m
[33m  [0m 73  	            }
[33m  [0m 74  	            [35m// Step 5: update after and room, in preparation for the next read.[0m
[33m  [0m 75  	            after = buf + inbuf;
[33m->[0m 76  	            room = [32msizeof[0m(buf) - [4minbuf[0m;
[33m  [0m 77  	        }
[33m  [0m 78  	        close(fd);
[33m  [0m 79  	        printf("The connection is now closed ...\n");
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003920[0m bufserver`main at [36mbufserver.c[0m:[33m39[0m:[33m9[0m
[33m  [0m 36  	        [32mchar[0m *after = buf;       [35m// Pointer to position after the data in buf[0m
[33m  [0m 37  	        
[33m  [0m 38  	        [32mint[0m nbytes;
[33m->[0m 39  	        [32m[4mwhile[0m[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m  [0m 41  	            inbuf += nbytes;
[33m  [0m 42  	            [32mint[0m where;
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G



Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003874[0m bufserver`main at [36mbufserver.c[0m:[33m41[0m:[33m22[0m
[33m  [0m 38  	        [32mint[0m nbytes;
[33m  [0m 39  	        [32mwhile[0m ((nbytes = read(fd, after, room)) > [31m0[0m) {
[33m  [0m 40  	            [35m// Step 1: update inbuf (how many bytes were just added?)[0m
[33m->[0m 41  	            inbuf += [4mnbytes[0m;
[33m  [0m 42  	            [32mint[0m where;
[33m  [0m 43  	
[33m  [0m 44  	            [35m// Step 2: the loop condition below calls find_network_newline[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8G
Process 33268 stopped
* thread #1, queue = [32m'com.apple.main-thread'[0m, stop reason = [31mstep over[0m
    frame #0: [33m0x0000000100003884[0m bufserver`main at [36mbufserver.c[0m:[33m51[0m:[33m13[0m
[33m  [0m 48  	            [35m//[0m
[33m  [0m 49  	            [35m// Note: we use a loop here because a single read might result in[0m
[33m  [0m 50  	            [35m// more than one full line.[0m
[33m->[0m 51  	            [32m[4mwhile[0m[0m ((where = find_network_newline(buf, inbuf)) > [31m0[0m) {
[33m  [0m 52  					[35m// where is now the index into buf immediately after [0m
[33m  [0m 53  					[35m// the first network newline[0m
[33m  [0m 54  	                [35m// Step 3: Okay, we have a full line.[0m
Target 0: (bufserver) stopped.
(lldb) [1G[2m(lldb) [0m[8Gprint buf
(char[30]) $60 = "A stitch in time\r\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G
(char[30]) $61 = "A stitch in time\r\nA stitch in "
(lldb) [1G[2m(lldb) [0m[8G